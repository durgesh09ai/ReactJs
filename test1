import React, { useEffect, useState } from "react";
import { observer } from "mobx-react-lite";
import {
  Paper,
  Box,
  Typography,
  IconButton,
  Menu,
  MenuItem,
} from "@mui/material";
import MoreVertIcon from "@mui/icons-material/MoreVert";
import EditIcon from "@mui/icons-material/Edit";
import DeleteIcon from "@mui/icons-material/Delete";
import SetupHeader from "./SetupHeader";
import { mainPageStore } from "../../stores/MainPageStore";

  const SolutionPanel: React.FC = () => {

  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);
  const [currentPage, setCurrentPage] = useState(1);
  const productPerPage = 4;
  const start = (currentPage - 1) * productPerPage;

  const handleClick = (event: React.MouseEvent<HTMLElement>) => {
    setAnchorEl(event.currentTarget);
  };

  const handleClose = () => {
    setAnchorEl(null);
  };

  const {
    fetchSolutionListData,
    solutionListData,
    solutionlistloading
   }  = mainPageStore;


   useEffect(() => {
    fetchSolutionListData(start,productPerPage);
  }, [currentPage]);

  const isMenuOpen = Boolean(anchorEl);

  const columnTitles = [
    "Solution Name",
    "Type",
    "IMU",
    "SGU",
    "Created On",
    "Status",
    "views",
    "Actions",
  ];

  const solutionlist = solutionListData?.result ?? [];

  console.log('data:',solutionlist);

  return (
    <Paper elevation={1} sx={{ maxWidth: "100%", pb: "20px", px: 1, borderRadius: 1 }}>
      <SetupHeader title="My Solution" />

      <Box sx={{ display: "flex", flexDirection: "column", justifyContent: "center" }}>
        <Paper
          elevation={0}
          sx={{
            border: "1px solid rgba(18,18,21,0.10)",
            borderRadius: 0,
            padding: 0.5,
            width: "100%",
          }}
        >
          {/* Header Row */}
          <Box
            sx={{
              display: "grid",
              gridTemplateColumns: "repeat(8, 1fr)",
              alignItems: "center",
              gap: 2,
              mb: 1,
              backgroundColor:"#0F4977",
              px:2,
              py:1
            }}
          >
            {columnTitles.map((title, index) => (
              <Typography
                key={index}
                variant="subtitle2"
                sx={{ color: "#fff", fontWeight: 400,fontSize:12,textAlign:index===columnTitles.length -1 ? "right" : "left" }}
              >
                {title}
              </Typography>
            ))}
          </Box>

          {/* Sample Data Row */}
          <Box
            sx={{
              display: "grid",
              gridTemplateColumns: "repeat(8, 1fr)",
              alignItems: "center",
              gap: 2,
            }}
          >
            {solutionlist.map((items:any,index:number) => {
              <Typography key={index} sx={{fontSize:12}} >Solution {index + 1}</Typography>
           
            {/* Action column */}
            <Box sx={{ display: "flex", justifyContent: "flex-end" }}>
              <IconButton
                size="small"
                onClick={handleClick}
                sx={{ "&:hover": { backgroundColor: "transparent" } }}
              >
                <MoreVertIcon />
              </IconButton>

              <Menu
                anchorEl={anchorEl}
                open={isMenuOpen}
                onClose={handleClose}
                anchorOrigin={{ vertical: "bottom", horizontal: "right" }}
                transformOrigin={{ vertical: "top", horizontal: "right" }}
              >
                <MenuItem onClick={handleClose} sx={{ fontSize:12 }}>
                  <EditIcon fontSize="small" sx={{ mr: 1 }} /> Edit
                </MenuItem>
                <MenuItem onClick={handleClose} sx={{ fontSize:12 }}>
                  <DeleteIcon fontSize="small" sx={{ mr: 1 }} /> Archive
                </MenuItem>
              </Menu>
            </Box>
            })}

          </Box>
        </Paper>
      </Box>
    </Paper>
  );
};

export default observer(SolutionPanel);


___________________________________________


[
    {
        "id": "113b6105-13a3-4250-96f8-0a4511b12d16",
        "name": "New Solution",
        "description": "",
        "tags": [
            "Payer",
            "Underwriting"
        ],
        "profile_img": "profile1.png",
        "views": 9
    },
    {
        "id": "113b6105-13a3-4250-96f8-0a4511b12d15",
        "name": "New Solution",
        "description": "Data Engineering & Management, Cloud Architecture,Data Acquisition- Intake Integration,Group Reporting Analytics,Medical Cost Management,Data Pipelines,IT,IT",
        "tags": [
            "Payer",
            "Underwriting"
        ],
        "profile_img": "profile1.png",
        "views": 9
    },
    {
        "id": "113b6105-13a3-4250-96f8-0a4511b12d14",
        "name": "New Solution",
        "description": "",
        "tags": [
            "Payer",
            "Underwriting"
        ],
        "profile_img": "profile1.png",
        "views": 8
    },
    {
        "id": "113b6105-13a3-4250-96f8-0a4511b12d13",
        "name": "New Solution",
        "description": "",
        "tags": [
            "Payer",
            "Underwriting"
        ],
        "profile_img": "profile1.png",
        "views": 7
    }
]
