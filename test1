import { makeAutoObservable, runInAction, toJS } from "mobx";
import { API_BASE_URL } from "./config/config";

export class SolutionFormStore {
  apiUrl: string = API_BASE_URL;
  formData: Record<string, any> = {};
  error: any;

  constructor() {
    makeAutoObservable(this);
  }

  // Merge any new form data into the global formData object
  updateFormData(data: Record<string, any>) {
    this.formData = { ...this.formData, ...data };
  }

  // Get the entire form data
  getFormData() {
    return this.formData;
  }

  // Submit form data
  // async submit() {
  //   console.log("Submitting", toJS(this.formData));
  //   // Example API call:
  //   // await axios.post(`${API_BASE_URL}/submit`, this.formData);
  // }

  submit = async () => {
    try {

    const  data =  {research_name: string; description: string; workspace_id: string }

        const res = await fetch(`${this.apiUrl}/research_dashboard/create_solution`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(data),
      });
  
      if (!res.ok) {
        throw new Error("Failed to add research item");
      }
        // Re-fetch the SideMenu data
    //  await this.fetchSideMenuData(this.loggedInUser);
      } catch (e: any) {
      runInAction(() => {
        this.error = e.message || "Unknown error";
      });
    }
  };


  // Reset the entire form
  reset() {
    this.formData = {};
  }
}

export const solutionFormStore = new SolutionFormStore();



