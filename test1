import React, { useState } from "react";
import {
  FormControl,
  InputLabel,
  MenuItem,
  Select,
  SelectChangeEvent,
  ListSubheader
} from "@mui/material";

// Define types for your JSON structure
type SubCategoryType = {
  id: string;
  name: string;
};

type SubCategory = {
  SubCategoryTypeList: SubCategoryType[];
};

type LobObject = {
  Lob: string;
  SubCategoryList: {
    [subCategoryName: string]: SubCategory;
  };
};

type Data = {
  [lobName: string]: LobObject;
};

// Props
interface DropdownProps {
  data: Data;
}

const Dropdown: React.FC<DropdownProps> = ({ data }) => {
  const [selected, setSelected] = useState<string>("");

  const handleChange = (event: SelectChangeEvent<string>) => {
    setSelected(event.target.value);
  };

  const renderOptions = () => {
    const options: React.ReactNode[] = [];

    Object.entries(data).forEach(([lobName, lobObj]) => {
      const subCategories = lobObj.SubCategoryList;

      Object.entries(subCategories).forEach(([subCatName, subCatObj]) => {
        // Non-selectable subcategory name
        options.push(
          <ListSubheader key={`${lobName}-${subCatName}`}>
            {subCatName}
          </ListSubheader>
        );

        // Selectable types
        subCatObj.SubCategoryTypeList.forEach((type) => {
          options.push(
            <MenuItem key={type.id} value={type.id}>
              {type.name}
            </MenuItem>
          );
        });
      });
    });

    return options;
  };

  return (
    <FormControl fullWidth>
      <InputLabel id="dropdown-label">Select Type</InputLabel>
      <Select
        labelId="dropdown-label"
        value={selected}
        label="Select Type"
        onChange={handleChange}
      >
        {renderOptions()}
      </Select>
    </FormControl>
  );
};

export default Dropdown;
