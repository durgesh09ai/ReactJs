
import React, { useEffect, useState } from "react";
import { observer } from "mobx-react-lite";
import { 
  Box, 
  Button, 
  Typography, 
  Paper,
  FormControl,
  FormLabel,
  Stack,
  MenuItem,
  Select,
    List,
  ListItem,
  ListItemButton,
  ListItemText,
  Grid
} from "@mui/material";


import AddIcon from '@mui/icons-material/Add';
import FilterDropdown from "../ui/dashboard/FilterDropdown";
import DataCard from "../ui/dashboard/DataCard";
import DetailStatCard from "../ui/dashboard/DetailStatCard";
import EmojiEventsIcon from "@mui/icons-material/EmojiEvents";
import { useNavigate } from "react-router-dom";
import { mainPageStore } from "../../stores/MainPageStore";
import KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';
import { Tabs, Tab } from "@mui/material";
import { TabContext, TabPanel } from "@mui/lab";
import { ProductCard } from "./ProductCard";

const DetailContent = () => {
  const navigate = useNavigate();
  const userId = "admin@gmail.com";


 const [activeTab, setActiveTab] = useState('insurance');
  const [activeSidebarItem, setActiveSidebarItem] = useState('domain-ops');


const tabs = [
  { id: 'insurance', label: 'Insurance' },
  { id: 'healthcare', label: 'Healthcare & Lifescience' },
  { id: 'banking', label: 'Banking & Capital Mkts' },
  { id: 'diversified', label: 'Diversified Industries' },
  { id: 'growth', label: 'Growth Mkts' }
];

const sidebarItems = [
  { id: 'domain-ops', label: 'Domain Ops' },
  { id: 'fa-ops', label: 'F&A Ops' },
  { id: 'payment-integrity', label: 'Payment Integrity' },
  { id: 'analytics-ai', label: 'Analytics & AI' },
  { id: 'platform', label: 'Platform' },
  { id: 'data-mgt', label: 'Data Mgt' },
  { id: 'de-ai', label: 'DE & AI' }
];

// Assuming 8 sample products
const products = new Array(8).fill(0).map((_, index) => ({
  id: `${index}`,
  title: `Product ${index + 1}`,
  description: 'Streamline collection, validation, and maintenance of provider information effortlessly.',
  imageUrl: 'https://cdn.builder.io/api/v1/image/assets/b22a1f591db946d8a5b6fadc33b7c231/fdc9969fa4e85a1de72dd5366fd09b6f86b9ea0a?placeholderIfAbsent=true',
  iconUrl: 'https://via.placeholder.com/25',
  actionIcon1: 'https://via.placeholder.com/16',
  actionIcon2: 'https://via.placeholder.com/16',
  badges: [
    { text: 'Payer', variant: 'primary' as const },
    { text: 'Underwriting', variant: 'secondary' as const }
  ]
}));




  const { fetchStatData,
    statData,
    fetchByTypeOptions,
    fetchByTechnologyOptions,
    fetchByClientOptions,
    fetchByAnalyticsOptions,
    typeOptionsList,
    technologyOptionsList,
    clientOptionsList,
    analyticsOptionsList,
   }  = mainPageStore;

  useEffect(() => {
    fetchStatData(userId);
    fetchByTypeOptions();
    fetchByTechnologyOptions();
    fetchByClientOptions();
  }, [userId]);


  useEffect(() => {
    fetchByAnalyticsOptions();
  }, [userId]);


  const handleClick = () => {
    navigate("/dashboarddetail");
  };

  const addSolution = () => {
    navigate("/addasolution");
  };
 const [selectedTech, setSelectedTech] = useState();

// const handleTechChange = (event: React.ChangeEvent<{ value: string }>) => {
//   setSelectedTech(event.target.value);
// };

  return (
    <Box sx={{ 
      display: 'flex', 
      flexDirection: 'column', 
      flexGrow: 1, 
      minWidth: '240px'
    }}>

<Box 
  sx={{ 
    display: "flex", 
    justifyContent: "flex-end", 
    gap: 2 // Adjust the spacing between buttons
  }}
>
  <Button 
   onClick={addSolution}
    variant="outlined" 
    startIcon={<AddIcon />} 
    sx={{ 
      color: "#0F4977", 
      borderColor: "#0F4977",
      fontSize: "12px", // Smaller text
      boxShadow: "0px 1px 3px 0px rgba(96,108,128,0.05)",
      height:'40px',
      borderRadius: '8px',
      "&:hover": {
        borderColor: "#0F4977",
        backgroundColor: "rgba(15, 73, 119, 0.04)"
      }
    }}
  >
    Add New Solution
  </Button>

  <Button 
  onClick={handleClick}
    variant="contained" 
    startIcon={<EmojiEventsIcon />} // Champion icon for "My Stat and Rank"
    sx={{ 
      color: "#FFF", 
      borderColor: "#0F4977",
      fontSize: "14px", 
      borderRadius: '8px',
      boxShadow: "0px 1px 3px 0px rgba(96,108,128,0.05)",
    }}
  >
    My Stat and Rank
  </Button>
</Box>


<Stack
  direction="row"
  spacing={2}
  sx={{
    mt: 2,
    flexWrap: 'wrap',
    justifyContent: 'space-between',
  }}
>
  {['Team', 'Total Demos', 'Total Active Projects','Most liked'].map((items, idx) => (
    <Box
      key={idx}
      sx={{
        flex: '1 1 22%', // allows shrinking a bit to fit 4
        minWidth: '200px', // fallback for mobile
        maxWidth: '25%',
      }}
    >
      <DetailStatCard
        value="125"
        label={`${items}`}
        icon="./team1.svg"
        trend="+12%"
        trendIcon="./arrow.svg"
        trendText="Since last month"
      />
    </Box>
  ))}
</Stack>



      <Box sx={{ width: '100%', mt: 4 }}>
        <Box sx={{ width: '100%' }}>
          <Box sx={{ 
            display: 'flex',
            justifyContent: 'space-between',
            alignItems: 'center',
            height: '48px'
          }}>
            
            <Typography variant="h6" component="h2" sx={{ fontWeight: 600 }}>
              Explore Solutions Across Business Units
            </Typography>
          </Box>

<Paper
  sx={{
    p: 3,
    mt: 2,
    borderRadius: 2,
    border: 'none',
    boxShadow: 'none',
  }}
>
  <Stack
    direction="row"
    spacing={2}
    sx={{
      flexWrap: 'nowrap',
      minWidth: '100%',
    }}
  >
    {/* [ 'By Type', 'By Technology', 'By Client', 'By Digital & Analytics' ] */}


      <Box
        key="By Type"
        sx={{
          flex: '1 1 22%',
          minWidth: '200px',
          maxWidth: '25%',
        }}
      >
      <FormControl fullWidth>
      <FormLabel  sx={{ 
          mb: 1, 
          color: '#000', 
          fontSize: '14px', 
          fontStyle: 'normal', 
          fontWeight: 400, 
          lineHeight: 'normal'
        }}> By Type
        </FormLabel>
      <FilterDropdown label="By Type" />
      </FormControl>
      </Box>

       <Box
        key="By Technology"
        sx={{
          flex: '1 1 22%',
          minWidth: '200px',
          maxWidth: '25%',
        }}
      >
      <FormControl fullWidth>
      <FormLabel  sx={{ 
          mb: 1, 
          color: '#000', 
          fontSize: '14px', 
          fontStyle: 'normal', 
          fontWeight: 400, 
          lineHeight: 'normal'
        }}> By Technology
        </FormLabel>
 <Select
  value={selectedTech}
  displayEmpty
  IconComponent={KeyboardArrowDownIcon}
  sx={{
    bgcolor: 'background.paper',
    borderRadius: '8px',
    '.MuiOutlinedInput-notchedOutline': {
      borderColor: 'rgba(211,209,209,0.4)',
    },
    '&.Mui-focused .MuiOutlinedInput-notchedOutline': {
      borderColor: 'rgba(211,209,209,0.6)',
    },
    '& .MuiSelect-select': {
      backgroundColor: 'white',
    },
    '& .MuiPaper-root': {
      backgroundColor: 'white',
      zIndex: 9999,
    }
  }}
  MenuProps={{
    PaperProps: {
      sx: {
        bgcolor: 'white',
        zIndex: 9999,
      }
    }
  }}
>
  {/* Placeholder */}
  <MenuItem value="" disabled>
    Select Technology
  </MenuItem>

  {/* Dynamically generated list */}
  {/* {technologyOptionsList.map(opt => (
    <MenuItem key={opt.id} value={opt.id}>
      {opt.name}
    </MenuItem>
  ))} */}
</Select>




      </FormControl>
      </Box>
      
      <Box
        key="By Client"
        sx={{
          flex: '1 1 22%',
          minWidth: '200px',
          maxWidth: '25%',
        }}
      >
      <FormControl fullWidth>
      <FormLabel  sx={{ 
          mb: 1, 
          color: '#000', 
          fontSize: '14px', 
          fontStyle: 'normal', 
          fontWeight: 400, 
          lineHeight: 'normal'
        }}> By Client
        </FormLabel>
      <FilterDropdown label="By Client" />
      </FormControl>
      </Box>

      <Box
        key="By Digital & Analytics"
        sx={{
          flex: '1 1 22%',
          minWidth: '200px',
          maxWidth: '25%',
        }}
      >
      <FormControl fullWidth>
      <FormLabel  sx={{ 
          mb: 1, 
          color: '#000', 
          fontSize: '14px', 
          fontStyle: 'normal', 
          fontWeight: 400, 
          lineHeight: 'normal'
        }}> By Digital & Analytics
        </FormLabel>
      <FilterDropdown label="By Digital & Analytics" />
      </FormControl>
      </Box>
    
  </Stack>
</Paper>


        {/* Cards Section */}
    {/* <Box sx={{ mt: 2 }}>
      <Box
        sx={{
          display: 'grid',
          gridTemplateColumns: {
            xs: '1fr',
            sm: 'repeat(2, 1fr)',
            md: 'repeat(3, 1fr)',
            lg: 'repeat(4, 1fr)',
          },
          gap: 2,
        }}
      >

        {[
          {
            icon: "./actual.svg",
            label: "Actuarial / Underwriting",
            value: "6",
          },
          {
            icon: "./benefits.svg",
            label: "Benefits Design",
            value: "8",
          },
          {
            icon: "./claim.svg",
            label: "Claims/Ops",
            value: "2",
          },
          {
            icon: "./clinical.svg",
            label: "Clinical Management",
            value: "12",
          },
          {
            icon: "./cservices.svg",
            label: "Clinical Services",
            value: "1",
          },
          {
            icon: "./custservices.svg",
            label: "Customer Services",
            value: "13",
          },
          {
            icon: "./medicalcost.svg",
            label: "Medical Cost Management",
            value: "14",
          },
          {
            icon: "./network.svg",
            label: "Network Management",
            value: "7",
          },
        ].map(({ icon, label, value }) => (
          <Box key={label}>
            <DataCard
              icon={icon}
              label={label}
              value={value}
              labelSx={{ fontWeight: 'bold', fontSize: '0.9rem' }}
            />
          </Box>
        ))}
      </Box>
    </Box> */}

 <Paper
      elevation={1}
      sx={{ borderRadius: '8px', border: '1px solid rgba(15,73,119,0.1)', overflow: 'hidden' }}
    >
      <Tabs
        value={activeTab}
        onChange={(e, val) => setActiveTab(val)}
        variant="scrollable"
        scrollButtons="auto"
        sx={{ borderBottom: 1, borderColor: 'divider' }}
      >
        {tabs.map((tab) => (
          <Tab
            key={tab.id}
            label={tab.label}
            value={tab.id}
            sx={{ textTransform: 'none', fontWeight: 500, fontSize: '16px',minWidth:"20%" }}
          />
        ))}
      </Tabs>

    <Box sx={{ display: 'flex', minHeight: 500 }}>
  {/* Sidebar */}
  <Box
    sx={{
      width: 215,
      borderRight: '1px solid rgba(0, 0, 0, 0.1)',
      flexShrink: 0,
    }}
  >
    <List>
      {sidebarItems.map((item) => (
        <ListItem key={item.id} disablePadding sx={{mb:5,mt:1}}>
          <ListItemButton
            selected={item.id === activeSidebarItem}
            onClick={() => setActiveSidebarItem(item.id)}
            sx={{
                  minHeight: "37",
                  textAlign:"center",
                  px: 1,
                  py: '9px',
                  m:1,
                  borderRadius: '8px',
                  '&.Mui-selected': {
                    backgroundColor: '#EAF2F7',
                   '& .MuiListItemText-primary': {
                      color: 'black',
                      fontWeight: 500,
                    },
                  },
                  '&:hover': {
                    backgroundColor: '#EAF2F7',
                  },
                  '& .MuiListItemText-primary': {
                    fontSize: '14px',
                    color: '#604F4F',
                  },
                }}
          >
            <ListItemText primary={item.label} />
          </ListItemButton>
        </ListItem>
      ))}
    </List>
  </Box>

  {/* Product Grid with margin from sidebar */}
  <Box sx={{ flexGrow: 1, p: 2, ml: 3 }}>
    <Box
      display="flex"
      flexWrap="wrap"
      gap={2}
      justifyContent="flex-start"
    >
      {products.map((product) => (
        <Box
          key={product.id}
          sx={{
            flex: '1 1 calc(50% - 16px)',
            minWidth: 300,
            maxWidth: '100%',
          }}
        >
          <ProductCard {...product} />
        </Box>
      ))}
    </Box>

    <Box sx={{ mt: 2 }}>
      <Button
        onClick={() => console.log('View More')}
        sx={{ textTransform: 'none', fontWeight: 500, fontSize: '14px' }}
      >
        56+ View More
      </Button>
    </Box>
  </Box>
</Box>



    </Paper>




        
        </Box>
      </Box>
    </Box>
  );
};

export default observer(DetailContent);

