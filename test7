versionList: string[] = [];

fetchVersionList = async () => {
  try {
    this.loading = true;
    const res = await fetch(`${this.apiUrl}/versions`); // <-- adjust your endpoint
    if (!res.ok) throw new Error("Failed to fetch versions");
    const data = await res.json(); // should be something like: ["v1", "v2", "v3"]
    runInAction(() => {
      this.versionList = data;
      this.loading = false;
    });
  } catch (e: any) {
    runInAction(() => {
      this.error = e.message || "Unknown error";
      this.loading = false;
    });
  }
};
-----------------------------------

import { useEffect, useState } from "react";
import { observer } from "mobx-react-lite";
import { FormControl, Select, MenuItem } from "@mui/material";
import { dataProtoweaveGenAiStore } from "@/stores/ProtoweaveGenAiStore";

const VersionSelector = observer(() => {
  const [version, setVersion] = useState("");

  useEffect(() => {
    dataProtoweaveGenAiStore.fetchVersionList();
  }, []);

  const handleChange = (e) => {
    const selectedVersion = e.target.value;
    setVersion(selectedVersion);
    dataProtoweaveGenAiStore.fetchVersionData(selectedVersion); // optional, if needed
  };

  const versions = dataProtoweaveGenAiStore.versionList;

  return (
    <FormControl fullWidth size="small">
      <Select value={version} onChange={handleChange} displayEmpty>
        <MenuItem value="" disabled>
          Select Version
        </MenuItem>
        {versions.map((v) => (
          <MenuItem key={v} value={v}>
            version {v}
          </MenuItem>
        ))}
      </Select>
    </FormControl>
  );
});

export default VersionSelector;
