versionOptions: { key: string; value: string }[] = [];
async fetchVersionOptions() {
  try {
    const response = await fetch(`${this.apiUrl}/your-version-endpoint`); // replace with your real endpoint
    const data = await response.json();

    if (Array.isArray(data) && data.length > 0 && typeof data[0] === "object") {
      const parsed = Object.entries(data[0]).map(([key, value]) => ({
        key,
        value,
      }));

      runInAction(() => {
        this.versionOptions = parsed;
      });
    }
  } catch (error) {
    console.error("Error fetching version options:", error);
  }
}


-----------------------

useEffect(() => {
  researchStore.fetchVersionOptions();
}, []);

______________________________

<Select value={version} onChange={(e) => setVersion(e.target.value)}>
  {researchStore.versionOptions.map((opt) => (
    <MenuItem key={opt.key} value={opt.value}>
      {opt.key}
    </MenuItem>
  ))}
</Select>
